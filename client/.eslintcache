[{"E:\\projects\\nest-react\\client\\src\\index.tsx":"1","E:\\projects\\nest-react\\client\\src\\reportWebVitals.ts":"2","E:\\projects\\nest-react\\client\\src\\App.tsx":"3","E:\\projects\\nest-react\\client\\src\\routes.tsx":"4","E:\\projects\\nest-react\\client\\src\\pages\\AuthPage.tsx":"5","E:\\projects\\nest-react\\client\\src\\pages\\loginForm.tsx":"6","E:\\projects\\nest-react\\client\\src\\pages\\registrationForm.tsx":"7","E:\\projects\\nest-react\\client\\src\\pages\\RegistrationForm.tsx":"8","E:\\projects\\nest-react\\client\\src\\pages\\LoginForm.tsx":"9","E:\\projects\\nest-react\\client\\src\\hooks\\http.hook.ts":"10","E:\\projects\\nest-react\\client\\src\\hooks\\auth.hook.ts":"11","E:\\projects\\nest-react\\client\\src\\context\\AuthContext.tsx":"12","E:\\projects\\nest-react\\client\\src\\pages\\FirstPage.tsx":"13","E:\\projects\\nest-react\\client\\src\\pages\\CarsPage.tsx":"14","E:\\projects\\nest-react\\client\\src\\pages\\DetailCarPage.tsx":"15","E:\\projects\\nest-react\\client\\src\\components\\Comments.tsx":"16","E:\\projects\\nest-react\\client\\src\\components\\CommentForm.tsx":"17","E:\\projects\\nest-react\\client\\src\\redux\\store.ts":"18","E:\\projects\\nest-react\\client\\src\\redux\\rootReducer.ts":"19","E:\\projects\\nest-react\\client\\src\\redux\\carReducer.ts":"20","E:\\projects\\nest-react\\client\\src\\redux\\types.ts":"21","E:\\projects\\nest-react\\client\\src\\redux\\actions.ts":"22"},{"size":576,"mtime":1612700550470,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1610370387310,"results":"25","hashOfConfig":"24"},{"size":616,"mtime":1612700603069,"results":"26","hashOfConfig":"24"},{"size":1153,"mtime":1612702511001,"results":"27","hashOfConfig":"24"},{"size":349,"mtime":1611557630109,"results":"28","hashOfConfig":"24"},{"size":1130,"mtime":1611325487749,"results":"29","hashOfConfig":"24"},{"size":2428,"mtime":1611327690031,"results":"30","hashOfConfig":"24"},{"size":2708,"mtime":1611339996611,"results":"31","hashOfConfig":"24"},{"size":1640,"mtime":1611558371722,"results":"32","hashOfConfig":"24"},{"size":980,"mtime":1612690698680,"results":"33","hashOfConfig":"24"},{"size":771,"mtime":1611559240044,"results":"34","hashOfConfig":"24"},{"size":226,"mtime":1611337665904,"results":"35","hashOfConfig":"24"},{"size":302,"mtime":1612690687431,"results":"36","hashOfConfig":"24"},{"size":1116,"mtime":1612707900967,"results":"37","hashOfConfig":"24"},{"size":1009,"mtime":1612692254503,"results":"38","hashOfConfig":"24"},{"size":1150,"mtime":1612691362381,"results":"39","hashOfConfig":"24"},{"size":355,"mtime":1612692189021,"results":"40","hashOfConfig":"24"},{"size":331,"mtime":1612702785333,"results":"41","hashOfConfig":"24"},{"size":155,"mtime":1612697763766,"results":"42","hashOfConfig":"24"},{"size":423,"mtime":1612705548953,"results":"43","hashOfConfig":"24"},{"size":37,"mtime":1612694492850,"results":"44","hashOfConfig":"24"},{"size":336,"mtime":1612706035882,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q0voca",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projects\\nest-react\\client\\src\\index.tsx",[],"E:\\projects\\nest-react\\client\\src\\reportWebVitals.ts",[],["95","96"],"E:\\projects\\nest-react\\client\\src\\App.tsx",[],"E:\\projects\\nest-react\\client\\src\\routes.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\AuthPage.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\loginForm.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\registrationForm.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\RegistrationForm.tsx",["97","98","99"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from './../hooks/http.hook';\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { loading, request, error } = useHttp();\r\n  const [form, setForm]: any = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    gender: '',\r\n  });\r\n\r\n  const changeHandler = (event: any) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request('/auth/register', 'POST', { ...form });\r\n      const dataToken = await request('/auth/login', 'POST', {\r\n        email: form.email,\r\n        password: form.password,\r\n      });\r\n      auth.logIn(dataToken.accessToken, dataToken.email);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"firstName\">\r\n        <Form.Label>First name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter first name\"\r\n          name=\"firstName\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"lastName\">\r\n        <Form.Label>Larst name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter larst name\"\r\n          name=\"lastName\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"email\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          name=\"email\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"gender\">\r\n        <Form.Label>Gender</Form.Label>\r\n        <Form.Control as=\"select\" name=\"gender\" onChange={changeHandler}>\r\n          <option>Gender</option>\r\n          <option>male</option>\r\n          <option>female</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      {/* <Form.Group>\r\n        <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" />\r\n      </Form.Group> */}\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        onClick={registerHandler}\r\n        disabled={loading}\r\n      >\r\n        Registration\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n","E:\\projects\\nest-react\\client\\src\\pages\\LoginForm.tsx",["100"],"import React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nexport const LoginForm: React.FC = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { loading, request, error } = useHttp();\r\n  const [form, setForm]: any = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/auth/login', 'POST', { ...form });\r\n      auth.logIn(data.accessToken, data.email);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const changeHandler = (event: any) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"email\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          name=\"email\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          onChange={changeHandler}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/* <Form.Group>\r\n        <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" />\r\n      </Form.Group> */}\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        onClick={loginHandler}\r\n        disabled={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n","E:\\projects\\nest-react\\client\\src\\hooks\\http.hook.ts",[],"E:\\projects\\nest-react\\client\\src\\hooks\\auth.hook.ts",["101"],"import { useCallback, useState, useEffect } from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const logIn = useCallback((jwtToken, adress) => {\r\n    setToken(jwtToken);\r\n    setEmail(adress);\r\n    localStorage.setItem(storageName, JSON.stringify({ email, token }));\r\n  }, []);\r\n  const logOut = useCallback(() => {\r\n    setEmail(null);\r\n    setToken(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName)!);\r\n    if (data && data.token) {\r\n      logIn(data.token, data.userId);\r\n    }\r\n  }, [logIn]);\r\n\r\n  return { logIn, logOut, token, email };\r\n};\r\n","E:\\projects\\nest-react\\client\\src\\context\\AuthContext.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\FirstPage.tsx",[],"E:\\projects\\nest-react\\client\\src\\pages\\CarsPage.tsx",["102","103"],"E:\\projects\\nest-react\\client\\src\\pages\\DetailCarPage.tsx",[],"E:\\projects\\nest-react\\client\\src\\components\\Comments.tsx",["104"],"import React, { useState, useEffect } from 'react';\r\n\r\ninterface Prop {\r\n  carId: string;\r\n}\r\n\r\nexport const Comments: React.FC<Prop> = ({ carId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`http://localhost:3000/comments/${carId}`);\r\n      const data = await result.json();\r\n\r\n      //   let commentFullData: [object] = [{}];\r\n\r\n      for (const item of data) {\r\n        const userData = await fetch(\r\n          `http://localhost:3000/users/${item.user}`\r\n        );\r\n        const user = await userData.json();\r\n        item.user = `${user.firstName} ${user.lastName}`;\r\n      }\r\n      setComments(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const commentData = comments.map(\r\n    (el: { user: string; commentText: string; date: string }) => {\r\n      return (\r\n        <div>\r\n          <h5>{`Комментарии (${comments.length})`}</h5>\r\n          <p>{el.user}</p>\r\n          <p>{new Date(el.date).toLocaleString()}</p>\r\n          <p>{el.commentText}</p>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return <div>{commentData}</div>;\r\n};\r\n","E:\\projects\\nest-react\\client\\src\\components\\CommentForm.tsx",[],"E:\\projects\\nest-react\\client\\src\\redux\\store.ts",[],"E:\\projects\\nest-react\\client\\src\\redux\\rootReducer.ts",[],"E:\\projects\\nest-react\\client\\src\\redux\\carReducer.ts",[],"E:\\projects\\nest-react\\client\\src\\redux\\types.ts",[],"E:\\projects\\nest-react\\client\\src\\redux\\actions.ts",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"113","line":8,"column":29,"nodeType":"111","messageId":"112","endLine":8,"endColumn":34},{"ruleId":"109","severity":1,"message":"114","line":23,"column":13,"nodeType":"111","messageId":"112","endLine":23,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":9,"column":29,"nodeType":"111","messageId":"112","endLine":9,"endColumn":34},{"ruleId":"115","severity":1,"message":"116","line":13,"column":6,"nodeType":"117","endLine":13,"endColumn":8,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"120","line":16,"column":6,"nodeType":"117","endLine":16,"endColumn":8,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":26,"column":6,"nodeType":"117","endLine":26,"endColumn":8,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'email' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["126"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'carId'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [email, token]",{"range":"135","text":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},"Update the dependencies array to be: [carId]",{"range":"139","text":"140"},[400,402],"[email, token]",[464,466],"[dispatch]",[743,745],"[carId]"]